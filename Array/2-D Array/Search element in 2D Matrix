https://leetcode.com/problems/search-a-2d-matrix/description/

Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:
Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.

Input: matrix = [[1,3,5,7],
                 [10,11,16,20],
                 [23,30,34,60]], 
                target = 3
Output: true

----------------------------------------------------

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {

        int nRow=matrix.size();
        int nCol=matrix[0].size();

        int e=nRow*nCol-1,s=0;
        int mid= s+(e-s)/2;

        while(s<=e)
        {
            int element=matrix[mid/nCol][mid%nCol];

            if(element==target)
                return true;
            else if(element<target)
                s=mid+1;
            else
                e=mid-1;

            mid=s+(e-s)/2;
        }
        return false;
    }
};
