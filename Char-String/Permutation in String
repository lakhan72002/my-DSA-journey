https://leetcode.com/problems/permutation-in-string/description/

Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.
In other words, return true if one of s1's permutations is the substring of s2.

Example 1:
Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").

--------------------------------------------------------

class Solution {
private:
    bool checkEqual(int a[26],int b[26])
    {
        for(int i=0; i<26; i++)
        {
            if(a[i]!=b[i])
                return 0;
        }
        return 1;
    }
public:
    bool checkInclusion(string s1, string s2) {
        //Write your code here.
        
        int count1[26]={0};
        for(int i=0; i<s1.size(); i++)
        {
            int index=s1[i]-'a';
            count1[index]++;
        }

        int window=s1.size(),i=0;
        int count2[26]={0};
        while(i<window && i<s2.size())
        {
            int index=s2[i]-'a';
            count2[index]++; i++;
        }
        if(checkEqual(count1,count2))
            return 1;

        for(; i<s2.size(); i++)
        {
            int index=s2[i]-'a';
            count2[index]++;

            index= s2[i-window]-'a';
            count2[index]--;

            if(checkEqual(count1,count2))
                return 1;            
        }
        return 0;
    }
};
